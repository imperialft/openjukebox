%meta{'http-equiv' => 'refresh', :content => '60; URL=/'}
.jumbotron
  - if song = Song.current_queue
    %p.lead Now Playing
    %h1== "#{song.title}"
    %h3== by #{song.artist}
    %p.lead== As per request from #{link_to_twitter(song.user)}!
  - elsif Song.queues(:size) <= 0
    - if song = Song.current_random_song
      %p.lead Now Playing
      %h2== "#{song.title}"
      %h3== by #{song.artist}
      %p.lead
        Because there're no queues!
        Cue now and cut in!
    - else
      %p.lead Wait for it...
  - elsif song = Song.queues(:first)
    %p.lead Next Up
    %h1== "#{song.title}"
    %h3== by #{song.artist}
    %p.lead== As per request from #{link_to_twitter(song.user)}!
  - else
    %p.lead Wait for it...
  %a.btn.btn-large.btn-primary#cue{:href => '/songs'}== Cue your song for &yen;#{Song.per_minute_price.round}/min!
%hr
.row-fluid.marketing
  .span6
    %h4 Coming Up:
    - Song.queues(:to_a).each do |song|
      %p
        = link_to_twitter(song.user)
        requested
        %strong= song.title
        == by #{song.artist}.
    - if Song.queues(:size) <= 0
      %p There's nothing in the queue.
  .span6
    %table.table.table-striped
      %thead
        %tr
          %th Person
          %th Usage
      %tbody
        - PlayLog.usage.each do |user, yens|
          %tr
            %td= link_to_twitter(user)
            %td== &yen;#{yens}
    %table.table.table-striped
      %thead
        %tr
          %th Song
          %th Reqs
      %tbody
        - i = 0
        - last_count = nil
        - PlayLog.play_stats.each do |song, plays|
          - i += 1 if last_count != plays            
          - last_count = plays
          - break if i > 5
          %tr
            %td
              %strong= song.title
              / == by #{song.artist}
            %td= plays
    %p.muted Usage and play stats reset every first day of a month.
